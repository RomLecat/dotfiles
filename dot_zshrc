# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"
[ -d ~/.oh-my-zsh/custom/themes/powerlevel9k ] && ZSH_THEME="powerlevel9k/powerlevel9k"
[ -d ~/.oh-my-zsh/custom/themes/powerlevel10k ] && ZSH_THEME="powerlevel10k/powerlevel10k"
[ "${TERM_PROGRAM}" != "iTerm.app" ] && [ "${TERM_PROGRAM}" != "tmux" ]  && ZSH_THEME="nicoulaj"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)
unsetopt AUTO_CD

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# PATH config
export PATH=$PATH:~/.scripts/:~/.local/bin:/usr/local/sbin
[ -d /opt/homebrew/bin ] && export PATH=/opt/homebrew/sbin:/opt/homebrew/bin:$PATH

# Powerlevel10k style
POWERLEVEL9K_MODE=nerdfont-complete

# Aliases
alias unzip='7zz x'
alias 7z=7zz

# Environments
def() {
    [ ! -z $VIRTUAL_ENV ] && deactivate
    POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs)
    unset POWERLEVEL9K_CUSTOM_ENV
    unset POWERLEVEL9K_CUSTOM_ENV_FOREGROUND
    unset POWERLEVEL9K_CUSTOM_ENV_BACKGROUND
    export POWERLEVEL9K_CONTEXT_FOREGROUND=white
    export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon custom_env aws kubecontext dir vcs)
    export POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(terraform virtualenv)
    export POWERLEVEL9K_AWS_SHOW_ON_COMMAND='aws|osc|s3cmd|terraform|packer|osc-cli|oapi-cli'
    export POWERLEVEL9K_AWS_ICON='\uf0c2 '
    export POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='kubectl|calicoctl|cilium|velero'
    export POWERLEVEL9K_CUSTOM_ENV_FOREGROUND="white"
    export POWERLEVEL9K_CUSTOM_ENV_CONTENT_EXPANSION='%f%B${P9K_CONTENT}'
    export POWERLEVEL9K_CUSTOM_ENV_BACKGROUND="darkred"
    export POWERLEVEL9K_OS_ICON_FOREGROUND=black
    export POWERLEVEL9K_OS_ICON_BACKGROUND=white
    osc euw2
    vmware lct1
}
work() {
    . ~/Outscale/venv/bin/activate
    export POWERLEVEL9K_CUSTOM_ENV="echo WORK"
    unset POWERLEVEL9K_AWS_SHOW_ON_COMMAND
    export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(${POWERLEVEL9K_LEFT_PROMPT_ELEMENTS[@]/os_icon})
    cd ~/Outscale
}
torque() {
    [ -d ~/Torque/venv ] && . ~/Torque/venv/bin/activate
    export POWERLEVEL9K_CUSTOM_ENV="echo TORQUE"
    unset POWERLEVEL9K_AWS_SHOW_ON_COMMAND
    export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(${POWERLEVEL9K_LEFT_PROMPT_ELEMENTS[@]/os_icon})
    cd ~/Torque
}
ia() {
    export POWERLEVEL9K_CUSTOM_ENV="echo IA"
    unset POWERLEVEL9K_AWS_SHOW_ON_COMMAND
    export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(${POWERLEVEL9K_LEFT_PROMPT_ELEMENTS[@]/os_icon})
    cd ~/Torque
    osc euw2-ia
}

# Aliases
osc() {
    export OSC_REGION=$(cat ~/.osc/config.json | jq -r ".[\"`echo $1`\"].region_name")
    export OSC_ACCESS_KEY=$(cat ~/.osc/config.json | jq -r ".[\"`echo $1`\"].access_key")
    export OSC_SECRET_KEY=$(cat ~/.osc/config.json | jq -r ".[\"`echo $1`\"].secret_key")
    export OUTSCALE_REGION=$OSC_REGION
    export OUTSCALE_ACCESSKEYID=$OSC_ACCESS_KEY
    export OUTSCALE_SECRETKEYID=$OSC_SECRET_KEY
    export AWS_DEFAULT_PROFILE=$1
    export AWS_DEFAULT_REGION=$OSC_REGION
    export AWS_ACCESS_KEY_ID=$OSC_ACCESS_KEY
    export AWS_SECRET_ACCESS_KEY=$OSC_SECRET_KEY
}
vmware() {
    source ~/.govmomi/$1.env
}

# BGPTools CWhois
function cwhois { whois -h bgp.tools " -v $*"; }

# iTerm fixes
export TERM=xterm-256color

# Bitwarden-cli fix
export NODE_OPTIONS="--no-deprecation"

# GPG
export GPG_TTY=$(tty)

# AWS-CLI tweaks
export AWS_PAGER=""

# SSH Completion
h=()
if [[ -r ~/.ssh/config ]]; then
    h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
if [[ -r ~/.ssh/known_hosts ]]; then
    h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
fi
if [[ $#h -gt 0 ]]; then
    zstyle ':completion:*:ssh:*' hosts $h
    zstyle ':completion:*:slogin:*' hosts $h
fi

# Auto Completions
[ -r /opt/homebrew/Cellar/oapi-cli/0.0.0/contrib/completions/zsh/oapi-cli-completion.zsh ] && source /opt/homebrew/Cellar/oapi-cli/0.0.0/contrib/completions/zsh/oapi-cli-completion.zsh
[ -r /opt/homebrew/bin/velero ] && source <(velero completion zsh)

# Tmux
if [ -z ${TMUX} ] && [ "${TERM_PROGRAM}" = "iTerm.app" ]; then
    tmux -u attach || tmux -u
fi

# Default env
def

# Load credentials if available
set -o allexport
[ -r ~/.config/credentials ] && source ~/.config/credentials
set +o allexport

